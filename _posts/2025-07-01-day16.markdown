---
layout: post
title:  "Day 16 - When in Doubt, Start!"
date:   2025-07-01 04:54:49 -0600
categories: jekyll update
---

Okay we WILL get a full blog post in today! Came in around 9:30 this morning and had a lovely thorough answer from Danny about my question about when to use React / what technologie to use when, aka " *the* question of web development right now" according to Danny. I think I'll try and use Turbo / Hotwire to do the partial page re-render for comment replies and also editing comments. David is very good at Turbo so I'm going to ask him about it also the line between app devs and javascript devs in our pairing tour tomorrow. I think I'm not going to use React, but Danny says that importmap isn't that great, and that superglue is a new gem that is very promising to insert react components. In response to Columbia and the question about what tools - **"Use the least amount of tech you can to provide the experience the client needs"**.

I think then I was just reading about turbo and trying to get it to work (it does not yet, but David will save me), then we had the biweekly dev meeting. Nick presented on MCPs which is Model Context Protocol, which is how applications provide context to LLMS. He went through the MPC docs for an overview then showed some code for a tutorial he went through to create a weather alerts tool that can be added to Claude. What it seems like is a way to connect Claude to the National Weather Service API. There is a host, client, and server, and it has something to do with how you can section off what data a LLM can use vs a user. Thinking back on it now that might make some sense, for example if you're building some kind of chatbot interface and say users have to pay a premium to get access to real time weather alerts, then if that data is sectioned off into this tool, you can decide whether to allow that tool or not based on user premium status? Chatgpt says my interpretation is right haha. David asked "fundamentally, what is this thing?" which is SUCH A GOOD QUESTION. I feel like I was following along in the code a little bit but didn't understand what it was for at all until Nick opened up Claude, David was asking like is it a web server connected to an API, a command line interface? I feel like the high level is very tricky for me sometimes so thank you David for the "what is this" question. Sol brought up how Viget might use this in connecting to tools like RPM and cropduster that have data. SDK = software development kit.

Then Rhyder and I went to Postino's for our Viget provided meal and I got the bruschetta board, very fancy, probably spent like an hour and a half between getting lunch and eating it haha. Brainstorming about Ketchup over lunch with Jackson and Laura, thinking about how we could do some research on user experiences and opinions, maybe a leaderboard to incentivize weekly topping participation, etc, it's kind of funny that we have so many ideas over a slack bot ice breaker message, like it's not that deep, but also this is what Viget does this is how things are invented and developed! Kinda cool!

Ragan wrote out some tickets, user story focused, and I was feeling a little lost of where to start with them, not exactly development focused, if you take them at face value they all seem like kind of front end interaction that Rhyder would be in charge of but obviously the backend is there just not quite as visible. Asked Danny and we set up a time to talk with the 4 of us tomorrow morning, but yeah I just needed to start reading the code. The project file structure of Adonis was confusing at first, there was models and controllers in the app folder but where is views or the views equivalent ?? (I am so converted to Ruby on Rails MVC already haha). Found it in the resources folder after I command F-ed the words that are actually on the page. I think and Danny said that I'll work mostly in app database land and Rhyder will work in resources/remix land, and I'm not quite sure how we'll interact yet but the more I looked at it the more approachable it got! I sketched out the structure of the toppings and responses database tables, thinking about what columns we'd need, checked with Ragan (she'd already written it out in the figma oops), more brainstorming / thinking about how responses will be stored / visible (connected to topping and/or person?) Need to ask about an admin user to test with, and also what format is "toppings in bulk"? Reading adonis / lucid docs to understand database. Showed rhyder the silliness of the "why would i block someone" button and he fixed it! The first PR for ketchup! I was a reviewer haha. Then I made a draft branch and yeah made my database migration for the toppings table so i've got something to show tomorrow. Been thinking through and will start with CRUD for toppings tomorrow, which then I get Rhyder will be able to access those POST / GET / DELETE / PATCH routes. I just needed to start!

Did a little bit of cleanup on Natalie News, got rid of js stuff, so not too messy to show David tomorrow, and then writing my blog as I eat dinner! And now it's time to get out of here and go dance!