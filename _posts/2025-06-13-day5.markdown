---
layout: post
title:  "Day 5 - Free Brunch!"
date:   2025-06-13 04:54:49 -0600
categories: jekyll update
---

Took advantage of the downtown Boulder parking and shower and went for a run before work today! However Jeremy beat me to the office and was already there as I walked in at 7:50. I was ready to work by 8:30 and I got some nice quiet time to work on the Rails set up, and got the default Rails page up and running with a few lines on the terminal.

Dev standup then FLF! Got a very yummy loaded hashbrown from Snooze. Cool to see everyone online and have the Boulder office all sitting together - I liked the clapping and everything from Nathan Long of course. Neat dive into two projects by Lauren - with the ACS website it was like "hey I've been there!". The interns introduced ourselves via show and tell - I showed off my microcrochet work bag, 1.3 mm crochet hook, and trusty lime green safety scissors. Stayed for the quick RPM meeting - no conflicts!

After lunch I reached out to Maria about MW. Then I finally gave in and downloaded VSCode. I have made it through my entire University of Michigan Computer Science degree using a mishmash of XCode, PyCharm, TextEdit, and editing directly from Terminal, but I was like am I really about to run Ruby on PyCharm? Now that I'm out in the real world I should perhaps use an IDE that doesn't require any disclaimers about me stubbornly sticking by XCode for years after my intro CS class said okay if you have a Mac you'll use XCode and if you have a PC download VSCode. Rhyder showed me a bunch of extensions to download and showed me some tricks. Visually it feels similar to PyCharm, I'm sure I'll figure it out as I go.

Then I had my Pairing Tour w/ Sol, where I learned A LOT about MW SNAP and the merge query qualms that I've been hearing whispers of this week. The problem lies in editing a quote then sending the new/updated data to ERP / writing to the VISUAL database (which is big, old, and can't change, and is running SQL Server 2019 which is old (and bad)). They're trying to do an upsert (update if the line exists or insert new if not) but you can't do that on SQL Server 2019, so they're using / tried to use merge queries instead.  Unforch merge queries are very slow since they have to scan every line of the table (and some of these tables have a million lines) and also there is a SQL parameter limit of 2100 parameters which is surpassed on some use cases (and for merge queries you can't break the parameters up). Thus Sol has been working on what is kind of a back track to the simpler option of, on editing a quote, deleting the previous data and rewriting it all, thus with no updates, only delete and new. This is not as clean for the audit history which shows all changes, which is why the merge query solution was pursued in the first place, but it's not clear what MW wants for the audit history anyway so it may be fine. Then we looked at writing a test for chunking queries to avoid the 2100 parameter limit. Checked that there is a problem if not chunking, found a little off by one error w/ chunking. Sol used AI to write some unit tests for chunking, it did an okay job. Lots of info but I feel like I followed along and understood pretty well! I was surprised that the work was so database focused, which Danny says isn't super typical for the JS team (I asked about the difference between app and js dev teams, he says it's a blurry line so I should ask everyone's thoughts on it).

Took a little walk around the block to wake up after the meeting, asked some slack q's, and did my Lattice weekly update. Then I spent actually very little time on Natalie News and made huge progress because the single command ```rails generate scaffold Article title:string url:string``` basically created an entire website?!? Full CRUD and you can go to all the articles and they're listed and there's a message to day that you've created/edited/destroyed the article. Kinda mindblowing. If this is what Ruby on Rails is perhaps I'm converted. Though now I have to spend some time reading the code to figure it out since I didn't get the practice of writing the basic stuff. 

So much for leaving early on a Friday since I've spent so much time writing my blog again, but yay! The first week!!